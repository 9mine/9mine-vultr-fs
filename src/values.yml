image: 
  repository: 9mine/9mine-vultr-fs
  tag: "main"
  pullPolicy: Always

initContainerImage:
  repository: 9mine/execfuse-jinja2
  tag: "master"
  pullPolicy: Always

securityContext: 
  privileged: true
  capabilities:
    add:
      - SYS_ADMIN

service:
  type: ClusterIP
  port: 3000
  
ClusterIPRange:
    from: 3001
    to: 3020

description: "vultrfs"

fs: |
    {% filter indent() -%}{% include 'fs.yml'%}
    {%- endfilter %}


profile: |
    echo --- start of profile loading ---
    load file2chan
    load std
    ndb/cs
    for host_var in `{ os env } { '{'$host_var'}' }
    
    dir = $EXPORT_PATH
    port = $NINEP_PUBLIC_PORT
    echo $NINEP_PUBLIC_HOST > /dev/sysname 
    test -d /mnt/registry || mkdir -p /mnt/registry
    mount -A tcp!registry!registry /mnt/registry
    VULTR_DIR = /tmp/aws/cmd
    test -d $VULTR_DIR || mkdir -p $VULTR_DIR
    load mpexpr
    fs_port = ${expr $NINEP_PUBLIC_PORT 1 +}
    file2chan $VULTR_DIR^/vultr {} {
        load mpexpr
        var=${expr 10 rand}
        echo new id is $var
        echo hostname is `{os hostname}
        (api) = `{echo ${rget data}} 
        `{os /bin/bash -c 'mkdir -p /accounts/'^$var}
        `{os /bin/bash -c 'echo '^$api^' > /accounts/'^$var^'/api'}

        grid/reglisten -A -r description 'user id is '^$var tcp!*!^$fs_port { export $dir^/^$var & } &
        fs_port=${expr $fs_port 1 +}
    }
        
    grid/reglisten -A -r description ${quote $NINEP_DESCRIPTION} 'tcp!*!'^$port { export $VULTR_DIR & }
    test -n $status && os pkill -9 emu-g
    echo --- end of profile loading ---